{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "ProjectTemplate Internal API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44300"
    }
  ],
  "paths": {
    "/api/Auth/sign-up": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_SignUp",
        "requestBody": {
          "x-name": "signUpRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConflictDetailsOfApiProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorCode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unspecified",
          "OutOfRange",
          "NotFound",
          "Invalid",
          "Forbidden",
          "TooManyRequests",
          "Conflict",
          "NullOrEmpty",
          "Unauthorized",
          "ExternalProviderNotAvailable"
        ],
        "enum": [
          "Unspecified",
          "OutOfRange",
          "NotFound",
          "Invalid",
          "Forbidden",
          "TooManyRequests",
          "Conflict",
          "NullOrEmpty",
          "Unauthorized",
          "ExternalProviderNotAvailable"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SignUpCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SignUpCommandResultStatus"
          }
        }
      },
      "SignUpCommandResultStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Success",
          "UserExists",
          "WeakPassword"
        ],
        "enum": [
          "Success",
          "UserExists",
          "WeakPassword"
        ]
      },
      "ApiConflictDetailsOfApiProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApiProblemDetails"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "Barer"
      }
    }
  }
}