{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "NSwag API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44801"
    }
  ],
  "paths": {
    "/api/v1/workflows/steps": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_GetList",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfStepDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/company": {
      "get": {
        "tags": [
          "UserCompany"
        ],
        "operationId": "UserCompany_GetUserCompany",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCompanyDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserCompany"
        ],
        "operationId": "UserCompany_SetUserCompany",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCompanySetRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserCompanyCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/packages": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetPackages",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfServicePackageListItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/packages/available-services": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetAvailableUserServicesForPackages",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfServiceListItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/package": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_CreateServicePackage",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveServicePackageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServicePackageCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{servicePublicID}/package": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetPackage",
        "parameters": [
          {
            "name": "servicePublicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePackageDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_UpdateServicePackage",
        "parameters": [
          {
            "name": "servicePublicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveServicePackageRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateServicePackageCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_DeletePackage",
        "parameters": [
          {
            "name": "servicePublicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePackageDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parties/{publicID}": {
      "get": {
        "tags": [
          "Party"
        ],
        "operationId": "Party_GetParty",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parties/search/ares": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Gets party by identification from ARES. For now identification is \"IČO\".",
        "operationId": "Party_GetPartyByAresID",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "IČO",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "partyType",
            "in": "query",
            "description": "Preferred party type",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PartyType"
                }
              ]
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetList",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "workflowStatuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "isSearchInStructure",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 7
          },
          {
            "name": "onlyAfterInvoiceDueDate",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 8
          },
          {
            "name": "includeClientReminderAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 9
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfOrderListItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_Get",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_Delete",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOrderCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/periodicity": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_SetPeriodicity",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPeriodicityRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPeriodicityCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/services": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetServices",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfOrderServiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/services/{serviceID}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_DeleteService",
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOrderServiceCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/periodic/upcoming": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetUpcomingPeriodicOrders",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "nexOrderDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfUpcomingPeriodicOrderDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/revocation/example/file": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetRejectionExampleFormFile",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/payment-calendar-items": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetPaymentCalendarItems",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfPaymentCalendarItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/count": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetCount",
        "parameters": [
          {
            "name": "onlyActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrdersCountQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderPublicID}/client-invoice-recurring-payment-create-invoice-and-set-as-paid-by-client": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Rucni doznacovani polozek kalendare",
        "operationId": "Order_ClientInvoiceRecurringPaymentCreateInvoiceAndSetAsPaidByClient",
        "parameters": [
          {
            "name": "orderPublicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentCreateInvoiceAndSetAsPaidByClientRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPeriodicityCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/client-zone/payment-calendar-items": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetPaymentCalendarItemsForClientZone",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfPaymentCalendarClientZoneItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/order-service/{orderServiceID}/eucs-order/info": {
      "get": {
        "tags": [
          "OrderServiceProduc"
        ],
        "operationId": "OrderServiceProduc_GetEucsOrderInfo",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "orderServiceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEucsOrderInfoQueryResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/order-service/{orderServiceID}/product/cancel": {
      "post": {
        "tags": [
          "OrderServiceProduc"
        ],
        "operationId": "OrderServiceProduc_CancelOrderServiceProductInInstitution",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "orderServiceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProductInInstitutionCommandRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelProductInInstitutionCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/order-service/{orderServiceID}/product/create": {
      "post": {
        "tags": [
          "OrderServiceProduc"
        ],
        "operationId": "OrderServiceProduc_CreateProductInInstitution",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "orderServiceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductInInstitutionRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductInInstitutionCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/steps": {
      "get": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_GetWorkflows",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfOrderWorkflowStepDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/draft": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CreateDraft",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDraftRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveDraftCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/draft/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteDraft",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DraftStepCompleteCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-review/{token}/summary": {
      "get": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_GetClientReviewSummary",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClientReviewSummaryQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-review/reminder": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_SeenByClientReminder",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendReminderCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-approval/{token}/reject": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_RejectClientApproval",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApprovalRejectRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientApprovalStepRejectCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-approval/{token}/in-progress": {
      "put": {
        "tags": [
          "OrderWorkflow"
        ],
        "summary": "Odešle SMS klientovi",
        "operationId": "OrderWorkflow_InitAcceptClientApproval",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientApprovalStepInitCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-approval/{token}/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteClientApproval",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApprovalCompleteRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteClientApprovalStepCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfCompleteClientApprovalStepError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/processing-services/{orderServiceID}/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteService",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "orderServiceID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderServiceCompleteCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/invoice-issuance/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteInvoiceIssuance",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceIssuanceStepCompleteCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/invoice-payment/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteInvoicePayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentStepCompleteCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/invoice-payment/reminder": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_SendInvoicePaymentReminder",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentStepReminderCommand"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/enterprise-invoice-issuance-and-payment": {
      "get": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_GetEnterpriseInvoiceIssuanceAndPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseInvoiceIssuanceAndPaymentStepQueryResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/cancel": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CancelClientInvoiceRecurringPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentCancelCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientInvoiceRecurringPaymentCancelErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/reminder": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_ReminderClientInvoiceRecurringPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentReminderCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientInvoiceRecurringPaymentReminderErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/prepaid/reminder": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_ReminderClientPrepaidInvoiceRecurringPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPrepaidInvoiceRecurringPaymentReminderCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientPrepaidInvoiceRecurringPaymentReminderErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/send-invoice": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CreateAndSendInvoiceToClientClientInvoiceRecurringPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentCreateInvoiceCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientInvoiceRecurringPaymentCreateAndSendInvoiceToClientErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/pay": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_ClientPaidClientInvoiceRecurringPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentClientPaidRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentClientPaidCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientInvoiceRecurringPaymentClientPaidErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-invoice-recurring-payment/{paymentCalendarItemID}/prepaid/send-invoice-and-pay": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_ClientPaidClientInvoiceRecurringPayment2",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "paymentCalendarItemID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-assignment/send-assignment-email": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_SendClientAssignmentEmail",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendClientAssignmentEmailCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{publicID}/workflow/client-prepaid-payment-approval/complete": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_CompleteClientInvoicePrepaidPayment",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepCompleteCommandRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepCompleteCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-prepaid-payment-approval/{token}/in-progress": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_InProgressClientInvoicePrepaidPayment",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepInProgressRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfInProgressClientApprovalStepError"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepInProgressCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/workflow/client-prepaid-payment-approval/{token}/reject": {
      "post": {
        "tags": [
          "OrderWorkflow"
        ],
        "operationId": "OrderWorkflow_RejectClientInvoicePrepaidPayment",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepRejectRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepRejectCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/user-settings": {
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_SaveSettings",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNotificationUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUserNotificationSettingsCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/user-invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_GetUserInvoices",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfInvoiceForSupplierCompanyByUserListItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{publicID}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_GetInvoice",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{publicID}/ISDOC": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_GetISDOC",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceISDOCDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{publicID}/ISDOCPdf": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_GetISDOCPdf",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceISDOCPdfBase64Dto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/invoice-for-supplier-company-by-user/ISDOCPdf": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_GetISDOCPdfInvoiceForSupplierCompanyByUserList",
        "parameters": [
          {
            "name": "InvoicePublicIDs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "guid"
              }
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceForSupplierCompanyByUserISDOCPdfBase64ListDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/invoice-for-client-by-order/{publicID}/cancel": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_CancelInvoiceForClientByOrder",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelInvoiceForClientByOrderCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnterpriseRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/enterprises/change-mode": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_ChangeMode",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseModeChangeRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/design-settings": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SaveDesignSettings",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseDesignSettingsUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveEnterpriseDesignSettingsCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/communication-settings": {
      "put": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SaveEnterpriseEmailCommunicationMode",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseCommunicationSettingsUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveEnterpriseCommunicationSettingsCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/basic-settings": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetBasicSettings",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseBasicSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/{externalID}/basic-settings": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetBasicSettings2",
        "parameters": [
          {
            "name": "externalID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseBasicSettingsDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/commission-settings": {
      "post": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SaveCommissionSettings",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnterpriseCommissionSettingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEnterpriseCommissionSettingsCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfCreateEnterpriseCommissionSettingsErrorStatus"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetCommissionSettingsList",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfEnterpriseCommissionSettingsListItemDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/service-settings": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetServiceSettings",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseServiceSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SaveServiceSettings",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseServiceSettingsUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveEnterpriseServiceSettingsCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEnterpriseModeCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/services": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetServices",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnterpriseServiceListItemDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SaveServices",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseServicesUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveEnterpriseServicesCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/logo": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetLogo",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseLogoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/{publicID}/logo/json": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetEnterpriseLogo",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseLogoDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/{publicID}/logo/file": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetEnterpriseLogoFile",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/{publicID}/logo/tenant/file": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetEnterpriseTenantLogo",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/{publicID}/design-settings": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetBasicSettings3",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterpriseDesignSettingsDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/enterprises/package-service-settings": {
      "get": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_GetPackageServiceSettings",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterprisePackageServiceSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Enterprise"
        ],
        "operationId": "Enterprise_SavePackageServiceSettings",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterprisePackageServiceSettingsUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveEnterprisePackageServiceSettingsCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetList",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityListOfCutoffListItemDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_CreateCutoff",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CutoffCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCutoffCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfCreateCutoffErrorStatus"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfCreateCutoffErrorStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/{publicID}": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetDetail",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CutoffDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/{companyID}/date-from-for-next-cutoff": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetDateFromForNextCutoff",
        "parameters": [
          {
            "name": "companyID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateFromForNextCutoffDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/expected-user-commission": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetExpectedCommissionUserQuery",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpectedUserCommissionQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/paid-user-commission": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetPaidCommissionUserQuery",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaidUserCommissionQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/{publicID}/ISDOCPdfs": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetCutoffISDOCPdfs",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CutoffISDOCPdfsDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/{publicID}/send-payments": {
      "post": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_SendCutoffPayments",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendCutoffPaymentsCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/{publicID}/detail-pdf": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetDetailPdf",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CutoffDetailPdfBase64Dto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cutoffs/user-supplier-companies": {
      "get": {
        "tags": [
          "Cutoff"
        ],
        "operationId": "Cutoff_GetCutoffUserSupplierCompanies",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CutoffUserSupplierCompanyListItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{publicID}": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetCompany",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies": {
      "put": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_UpdateCompany",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCompanyCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_CreateCompany",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanyCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/user-supplier-companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetUserSupplierCompanies",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSupplierCompanyListItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/user-supplier-company": {
      "post": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_SetUserSupplierCompany",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSupplierCompanySetRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserSupplierCompanyCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{publicID}/design-settings": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetDesignSettings",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyDesignSettingsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_SaveDesignSettings",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCompanyDesignSettingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCompanyDesignSettingsCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{publicID}/fio-settings": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetFioSettings",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFioSettingsDto"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_SaveFioSettings",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveFioSettingsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveCompanyFioSettingsCommandResult"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{publicID}/logo/file": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetLogoFile",
        "parameters": [
          {
            "name": "publicID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/code-lists": {
      "get": {
        "tags": [
          "CodeList"
        ],
        "operationId": "CodeList_GetList",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCodeListCollectionQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/count": {
      "get": {
        "tags": [
          "Client"
        ],
        "operationId": "Client_GetCount",
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClientsCountQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/search": {
      "get": {
        "tags": [
          "Client"
        ],
        "operationId": "Client_SearchParties",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/search/personal-number": {
      "get": {
        "tags": [
          "Client"
        ],
        "operationId": "Client_GetPartyByPersonalNumber",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cache/refresh": {
      "post": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_Refresh",
        "requestBody": {
          "x-name": "cachePassword",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": ""
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/sign-up": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_SignUp",
        "requestBody": {
          "x-name": "signUpRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpCommandResult"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfSignUpErrorStatus"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfPasswordChangeResultStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/sign-in": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_SignIn",
        "requestBody": {
          "x-name": "signInRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResult"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfAuthError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Token",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "client_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "client_secret": {
                    "type": "string",
                    "nullable": true
                  },
                  "grant_type": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfAuthError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/email-verification": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_VerifyEmail",
        "requestBody": {
          "x-name": "emailVerificationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailVerificationCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfEmailVerificationCommandResultStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/email-verification/send": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ResendVerificationEmail",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerificationEmailCommandResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/sso": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Sso",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SsoSignInRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfAuthError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/sso-token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Initiates redirect to identity server to provide OAuth2 token via SSO (Authorization Code flow).",
        "operationId": "Auth_SsoToken",
        "parameters": [
          {
            "name": "IdentityProvider",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IdentityProvider"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectHttpResult"
                }
              }
            }
          },
          "501": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/password-reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ResetPassword",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfResetPasswordCommandResultStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_SetPassword",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPasswordCommandResult"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfSetPasswordCommandStatus"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiProblemDetailsOfPasswordChangeResultStatus"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorCode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unspecified",
          "OutOfRange",
          "NotFound",
          "Invalid",
          "Forbidden",
          "TooManyRequests",
          "Conflict",
          "NullOrEmpty",
          "Unauthorized",
          "ExternalProviderNotAvailable"
        ],
        "enum": [
          "Unspecified",
          "OutOfRange",
          "NotFound",
          "Invalid",
          "Forbidden",
          "TooManyRequests",
          "Conflict",
          "NullOrEmpty",
          "Unauthorized",
          "ExternalProviderNotAvailable"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EntityListOfStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StepDto"
            }
          }
        }
      },
      "StepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stepID": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/StepType"
          }
        }
      },
      "StepType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "ClientAssignment",
          "ClientReview",
          "ClientApproval",
          "ProcessingServices",
          "ClientInvoiceIssuance",
          "ClientInvoicePayment",
          "EnterpriseInvoiceIssuanceAndPayment",
          "ClientInvoiceRecurringPayment",
          "Completed",
          "ClientPrepaidPaymentApproval"
        ],
        "enum": [
          "Draft",
          "ClientAssignment",
          "ClientReview",
          "ClientApproval",
          "ProcessingServices",
          "ClientInvoiceIssuance",
          "ClientInvoicePayment",
          "EnterpriseInvoiceIssuanceAndPayment",
          "ClientInvoiceRecurringPayment",
          "Completed",
          "ClientPrepaidPaymentApproval"
        ]
      },
      "UserCompanyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "publicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetUserCompanyCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "UserCompanySetRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "EntityListOfServicePackageListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePackageListItemDto"
            }
          }
        }
      },
      "ServicePackageListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceID": {
            "type": "integer",
            "format": "int32"
          },
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "relatedServices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServicePackageListRelatedServiceListItemDto"
            }
          },
          "variants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServicePackageListVariantListItemDto"
            }
          },
          "canEdit": {
            "type": "boolean"
          }
        }
      },
      "ServicePackageListRelatedServiceListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ServicePackageListVariantListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceVariantID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "currencyCode": {
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/ServiceVariantFrequency"
          },
          "product": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ServiceVariantFrequency": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Single",
          "Monthly"
        ],
        "enum": [
          "Single",
          "Monthly"
        ]
      },
      "ServiceVariantProduct": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "EucsGarance"
        ],
        "enum": [
          "None",
          "EucsGarance"
        ]
      },
      "EntityListOfServiceListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceListItemDto"
            }
          }
        }
      },
      "ServiceListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          },
          "serviceID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateServicePackageCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceID": {
            "type": "integer",
            "format": "int32"
          },
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SaveServicePackageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "relatedServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveServicePackageRelatedService"
            }
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveServicePackageServiceVariant"
            }
          }
        }
      },
      "SaveServicePackageRelatedService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SaveServicePackageServiceVariant": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceVariantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyCode": {
            "type": "string"
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/ServiceVariantFrequency"
          }
        }
      },
      "ServicePackageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "relatedServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageRelatedServiceListItemDto"
            }
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageVariantListItemDto"
            }
          }
        }
      },
      "PackageRelatedServiceListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          },
          "serviceID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PackageVariantListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "frequency": {
            "$ref": "#/components/schemas/ServiceVariantFrequency"
          },
          "serviceVariantID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateServicePackageCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceID": {
            "type": "integer",
            "format": "int32"
          },
          "servicePublicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PartyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/PartyType"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true
          },
          "personalNumber": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isForeigner": {
            "type": "boolean"
          },
          "isVATPayer": {
            "type": "boolean",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdentificationType"
              }
            ]
          },
          "identificationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeFirstName": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeLastName": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeBirthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        }
      },
      "PartyType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NaturalPerson",
          "LegalEntity",
          "SelfEmployed"
        ],
        "enum": [
          "NaturalPerson",
          "LegalEntity",
          "SelfEmployed"
        ]
      },
      "IdentificationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "IDCard",
          "Other"
        ],
        "enum": [
          "IDCard",
          "Other"
        ]
      },
      "AddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "addressID": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "orientationNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          }
        }
      },
      "AddressType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Permanent",
          "Mail"
        ],
        "enum": [
          "Permanent",
          "Mail"
        ]
      },
      "EntityListOfOrderListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderListItemDto"
            }
          }
        }
      },
      "OrderListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "externalID": {
            "type": "string",
            "format": "guid"
          },
          "clientFirstName": {
            "type": "string",
            "nullable": true
          },
          "clientLastName": {
            "type": "string",
            "nullable": true
          },
          "clientCompanyName": {
            "type": "string",
            "nullable": true
          },
          "clientFormattedName": {
            "type": "string"
          },
          "advisorFormattedName": {
            "type": "string"
          },
          "advisorFirstName": {
            "type": "string",
            "nullable": true
          },
          "advisorLastName": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfInvoiceAfterDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "currentStepType": {
            "$ref": "#/components/schemas/StepType"
          },
          "currentStepStatus": {
            "$ref": "#/components/schemas/OrderWorkflowStepStatus"
          },
          "lastCompleteStepType": {
            "$ref": "#/components/schemas/StepType"
          },
          "lastCompleteStepStatus": {
            "$ref": "#/components/schemas/OrderWorkflowStepStatus"
          },
          "currencyCode": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "workflowType": {
            "$ref": "#/components/schemas/WorkflowType"
          },
          "areAllStepsCompleted": {
            "type": "boolean"
          },
          "paymentFrequency": {
            "$ref": "#/components/schemas/OrderPaymentFrequency"
          }
        }
      },
      "OrderWorkflowStepStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "Rejected",
          "Completed"
        ],
        "enum": [
          "NotStarted",
          "InProgress",
          "Rejected",
          "Completed"
        ]
      },
      "WorkflowType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PaidAdvisoryFree",
          "PaidAdvisoryStrict",
          "PaidAdvisoryRecurringPaymentFree",
          "PaidAdvisoryRecurringPaymentStrict",
          "PaidAdvisoryPrepaidPaymentFree",
          "PaidAdvisoryPrepaidPaymentStrict",
          "PaidAdvisoryPrepaidRecurringPaymentFree",
          "PaidAdvisoryPrepaidRecurringPaymentStrict"
        ],
        "enum": [
          "PaidAdvisoryFree",
          "PaidAdvisoryStrict",
          "PaidAdvisoryRecurringPaymentFree",
          "PaidAdvisoryRecurringPaymentStrict",
          "PaidAdvisoryPrepaidPaymentFree",
          "PaidAdvisoryPrepaidPaymentStrict",
          "PaidAdvisoryPrepaidRecurringPaymentFree",
          "PaidAdvisoryPrepaidRecurringPaymentStrict"
        ]
      },
      "OrderPaymentFrequency": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Single",
          "Monthly",
          "Quarterly",
          "Semiannually",
          "Yearly"
        ],
        "enum": [
          "Single",
          "Monthly",
          "Quarterly",
          "Semiannually",
          "Yearly"
        ]
      },
      "OrderDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "currencyCode": {
            "type": "string"
          },
          "supplierCompanyID": {
            "type": "integer",
            "format": "int32"
          },
          "supplierCompanyPublicID": {
            "type": "string",
            "format": "guid"
          },
          "supplierPartyPublicID": {
            "type": "string",
            "format": "guid"
          },
          "clientPartyPublicID": {
            "type": "string",
            "format": "guid"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userPartyPublicID": {
            "type": "string",
            "format": "guid"
          },
          "userRelationType": {
            "$ref": "#/components/schemas/RelationType"
          },
          "currentStepType": {
            "$ref": "#/components/schemas/StepType"
          },
          "currentStepStatus": {
            "$ref": "#/components/schemas/OrderWorkflowStepStatus"
          },
          "lastCompleteStepType": {
            "$ref": "#/components/schemas/StepType"
          },
          "lastCompleteStepStatus": {
            "$ref": "#/components/schemas/OrderWorkflowStepStatus"
          },
          "periodicity": {
            "$ref": "#/components/schemas/OrderPeriodicity"
          },
          "frequency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderFrequency"
              }
            ]
          },
          "paymentType": {
            "$ref": "#/components/schemas/OrderPaymentType"
          },
          "nextOrderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "serviceRate": {
            "$ref": "#/components/schemas/OrderServiceRate"
          },
          "hourRateServiceVariantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hourRatePriceWithoutTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "hourRatePriceWithTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "clientID": {
            "type": "integer",
            "format": "int32"
          },
          "clientStatus": {
            "$ref": "#/components/schemas/OrderClientStatus"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderInvoiceDto"
            }
          },
          "paymentFrequency": {
            "$ref": "#/components/schemas/OrderPaymentFrequency"
          },
          "paymentFrequencyDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentFrequencyDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workflowType": {
            "$ref": "#/components/schemas/WorkflowType"
          },
          "isRecurringPayment": {
            "type": "boolean"
          },
          "isClientPersonalDataProcessingConsent": {
            "type": "boolean",
            "nullable": true
          },
          "isClientElectronicCommunicationConsent": {
            "type": "boolean",
            "nullable": true
          },
          "areAllStepsCompleted": {
            "type": "boolean"
          },
          "dateOfInvoiceAfterDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "RelationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Visibility",
          "OrderActions",
          "Representative"
        ],
        "enum": [
          "Visibility",
          "OrderActions",
          "Representative"
        ]
      },
      "OrderPeriodicity": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Single",
          "Periodic"
        ],
        "enum": [
          "Single",
          "Periodic"
        ]
      },
      "OrderFrequency": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Weekly",
          "Monthly",
          "Quarterly",
          "Yearly"
        ],
        "enum": [
          "Weekly",
          "Monthly",
          "Quarterly",
          "Yearly"
        ]
      },
      "OrderPaymentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PaymentAfterProcessingOrder",
          "Prepaid"
        ],
        "enum": [
          "PaymentAfterProcessingOrder",
          "Prepaid"
        ]
      },
      "OrderServiceRate": {
        "type": "string",
        "description": "Cena za služby",
        "x-enumNames": [
          "FixedPrice",
          "HourRate"
        ],
        "enum": [
          "FixedPrice",
          "HourRate"
        ]
      },
      "OrderClientStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "New",
          "Existing"
        ],
        "enum": [
          "New",
          "Existing"
        ]
      },
      "OrderInvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoicePublicID": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceForClientByOrderID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ClientInvoiceStatus"
          },
          "dateCanceled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ClientInvoiceStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Issued",
          "Paid",
          "Canceled"
        ],
        "enum": [
          "Issued",
          "Paid",
          "Canceled"
        ]
      },
      "DeleteOrderCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "SetPeriodicityCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "SetPeriodicityRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "periodicity": {
            "$ref": "#/components/schemas/OrderPeriodicity"
          },
          "frequency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderFrequency"
              }
            ]
          }
        }
      },
      "EntityListOfOrderServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderServiceDto"
            }
          }
        }
      },
      "OrderServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderServiceID": {
            "type": "integer",
            "format": "int32"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "serviceName": {
            "type": "string"
          },
          "serviceDescription": {
            "type": "string",
            "nullable": true
          },
          "serviceVariantName": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "serviceID": {
            "type": "integer",
            "format": "int32"
          },
          "serviceVariantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/OrderServiceStatus"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "processedByUserPartyPublicID": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "hoursSpent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderServiceProductDto"
            }
          },
          "packageRelatedServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageServiceDto"
            }
          }
        }
      },
      "OrderServiceStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotStarted",
          "Completed"
        ],
        "enum": [
          "NotStarted",
          "Completed"
        ]
      },
      "ServiceType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "HourRate",
          "ProvidedService",
          "Package"
        ],
        "enum": [
          "HourRate",
          "ProvidedService",
          "Package"
        ]
      },
      "OrderServiceProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderServiceProductID": {
            "type": "integer",
            "format": "int32"
          },
          "externalID": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          },
          "institutionStatus": {
            "$ref": "#/components/schemas/OrderServiceProductInstitutionStatus"
          }
        }
      },
      "OrderServiceProductInstitutionStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "WaitToCreate",
          "Created",
          "Canceled",
          "CreationError",
          "NotCreatedBecauseTest"
        ],
        "enum": [
          "WaitToCreate",
          "Created",
          "Canceled",
          "CreationError",
          "NotCreatedBecauseTest"
        ]
      },
      "PackageServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "packageServiceID": {
            "type": "integer",
            "format": "int32"
          },
          "relatedService": {
            "$ref": "#/components/schemas/ServiceDto"
          }
        }
      },
      "ServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteOrderServiceCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EntityListOfUpcomingPeriodicOrderDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpcomingPeriodicOrderDto"
            }
          }
        }
      },
      "UpcomingPeriodicOrderDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalID": {
            "type": "string",
            "format": "guid"
          },
          "clientFirstName": {
            "type": "string",
            "nullable": true
          },
          "clientLastName": {
            "type": "string",
            "nullable": true
          },
          "clientCompanyName": {
            "type": "string",
            "nullable": true
          },
          "clientFormattedName": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "File": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "utF8NoBOM": {
            "$ref": "#/components/schemas/Encoding"
          }
        }
      },
      "Encoding": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "default": {
            "$ref": "#/components/schemas/Encoding"
          },
          "preamble": {
            "$ref": "#/components/schemas/ReadOnlySpanOfByte"
          },
          "bodyName": {
            "type": "string"
          },
          "encodingName": {
            "type": "string"
          },
          "headerName": {
            "type": "string"
          },
          "webName": {
            "type": "string"
          },
          "windowsCodePage": {
            "type": "integer",
            "format": "int32"
          },
          "isBrowserDisplay": {
            "type": "boolean"
          },
          "isBrowserSave": {
            "type": "boolean"
          },
          "isMailNewsDisplay": {
            "type": "boolean"
          },
          "isMailNewsSave": {
            "type": "boolean"
          },
          "isSingleByte": {
            "type": "boolean"
          },
          "encoderFallback": {
            "$ref": "#/components/schemas/EncoderFallback"
          },
          "decoderFallback": {
            "$ref": "#/components/schemas/DecoderFallback"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "ascii": {
            "$ref": "#/components/schemas/Encoding"
          },
          "latin1": {
            "$ref": "#/components/schemas/Encoding"
          },
          "codePage": {
            "type": "integer",
            "format": "int32"
          },
          "isUTF8CodePage": {
            "type": "boolean"
          },
          "unicode": {
            "$ref": "#/components/schemas/Encoding"
          },
          "bigEndianUnicode": {
            "$ref": "#/components/schemas/Encoding"
          },
          "utF7": {
            "deprecated": true,
            "x-deprecatedMessage": "The UTF-7 encoding is insecure and should not be used. Consider using UTF-8 instead.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Encoding"
              }
            ]
          },
          "utF8": {
            "$ref": "#/components/schemas/Encoding"
          },
          "utF32": {
            "$ref": "#/components/schemas/Encoding"
          },
          "bigEndianUTF32": {
            "$ref": "#/components/schemas/Encoding"
          }
        }
      },
      "ReadOnlySpanOfByte": {
        "type": "object",
        "deprecated": true,
        "x-deprecatedMessage": "Types with embedded references are not supported in this version of your compiler.",
        "additionalProperties": false,
        "properties": {
          "item": {
            "$ref": "#/components/schemas/Byte"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "empty": {
            "$ref": "#/components/schemas/ReadOnlySpanOfByte"
          }
        }
      },
      "Byte": {
        "type": "object",
        "additionalProperties": false
      },
      "EncoderFallback": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "replacementFallback": {
            "$ref": "#/components/schemas/EncoderFallback"
          },
          "exceptionFallback": {
            "$ref": "#/components/schemas/EncoderFallback"
          },
          "maxCharCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DecoderFallback": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "replacementFallback": {
            "$ref": "#/components/schemas/DecoderFallback"
          },
          "exceptionFallback": {
            "$ref": "#/components/schemas/DecoderFallback"
          },
          "maxCharCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EntityListOfPaymentCalendarItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCalendarItemDto"
            }
          }
        }
      },
      "PaymentCalendarItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentCalendarItemID": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionWithTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "advisorCommissionWithoutTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "advisorCommissionTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PaymentCalendarItemStatus"
          },
          "invoiceForClientByOrderInvoiceID": {
            "type": "integer",
            "description": "InvoiceID for client invoice",
            "format": "int32",
            "nullable": true
          },
          "invoiceForClientByOrderNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoicePublicID": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "invoiceForSupplierCompanyByUserInvoiceID": {
            "type": "integer",
            "description": "InvoiceID for invoice between user and enterprise",
            "format": "int32",
            "nullable": true
          },
          "invoiceForSupplierCompanyByUserInvoiceNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "invoiceForClientByOrderID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastReminderSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastReminderSentByUserPartyPublicID": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dateCanceled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paidByClientDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfSentInvoiceToClient": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currencyCode": {
            "type": "string"
          },
          "invoiceForClientByOrderStatus": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClientInvoiceStatus"
              }
            ]
          },
          "invoiceForClientByOrderDateCanceled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processedByUserPartyPublicID": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "invoiceDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isPrepaidInvoiceAfterDueDate": {
            "type": "boolean"
          },
          "isInvoiceAfterDueDate": {
            "type": "boolean"
          }
        }
      },
      "PaymentCalendarItemStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Created",
          "Canceled",
          "SentToClient",
          "PaidByClient",
          "CommissionPaid"
        ],
        "enum": [
          "Created",
          "Canceled",
          "SentToClient",
          "PaidByClient",
          "CommissionPaid"
        ]
      },
      "GetOrdersCountQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ordersCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientInvoiceRecurringPaymentCreateInvoiceAndSetAsPaidByClientRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentCalendarInvoiceDateTo": {
            "type": "string",
            "format": "date-time"
          },
          "sendEmailToClient": {
            "type": "boolean"
          }
        }
      },
      "EntityListOfPaymentCalendarClientZoneItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCalendarClientZoneItemDto"
            }
          }
        }
      },
      "PaymentCalendarClientZoneItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "status": {
            "$ref": "#/components/schemas/PaymentCalendarItemStatus"
          },
          "invoicePublicID": {
            "type": "string",
            "description": "Client invoice",
            "format": "guid",
            "nullable": true
          },
          "currencyCode": {
            "type": "string"
          },
          "invoiceDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInvoiceAfterDueDate": {
            "type": "boolean"
          },
          "invoiceNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "GetEucsOrderInfoQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderInfoResponseDto": {
            "$ref": "#/components/schemas/OrderInfoResponseDto"
          }
        }
      },
      "OrderInfoResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "order_state": {
            "type": "string",
            "description": "Aktuální stav objednávky",
            "nullable": true
          },
          "payment_frequency": {
            "type": "string",
            "description": "Frekvence plateb",
            "nullable": true
          },
          "account_number": {
            "type": "string",
            "description": "Číslo bankovního účtu",
            "nullable": true
          },
          "vs": {
            "type": "integer",
            "description": "Variabilní symbol",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Výše platby",
            "format": "decimal",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "description": "Seznam dokumentů",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "status": {
            "type": "string",
            "description": "Status",
            "nullable": true
          }
        }
      },
      "Document": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "URL souboru"
          },
          "filename": {
            "type": "string",
            "description": "Název souboru"
          },
          "size": {
            "type": "integer",
            "description": "Velikost souboru",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Typ souboru"
          }
        }
      },
      "CancelProductInInstitutionCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "CancelProductInInstitutionCommandRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          }
        }
      },
      "CreateProductInInstitutionCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/OrderServiceProductInstitutionStatus"
          }
        }
      },
      "CreateProductInInstitutionRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          },
          "sendEmailWhenCreationError": {
            "type": "boolean"
          }
        }
      },
      "EntityListOfOrderWorkflowStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderWorkflowStepDto"
            }
          }
        }
      },
      "OrderWorkflowStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StepType"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderWorkflowStepStatus"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateInProgressStarted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processedByUserPartyPublicID": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "clientReviewStep": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClientReviewStepDto"
              }
            ]
          },
          "clientApprovalStep": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClientApprovalStepDto"
              }
            ]
          },
          "invoicePaymentStep": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InvoicePaymentStepDto"
              }
            ]
          },
          "clientPrepaidPaymentApprovalStep": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClientPrepaidPaymentApprovalStepDto"
              }
            ]
          },
          "workflowType": {
            "$ref": "#/components/schemas/WorkflowType"
          }
        }
      },
      "ClientReviewStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientReviewStepID": {
            "type": "integer",
            "format": "int32"
          },
          "lastReminderSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ClientApprovalStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isRevocationDisabled": {
            "type": "boolean"
          }
        }
      },
      "InvoicePaymentStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoicePaymentStepID": {
            "type": "integer",
            "format": "int32"
          },
          "lastReminderSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ClientPrepaidPaymentApprovalStepDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isRevocationDisabled": {
            "type": "boolean"
          }
        }
      },
      "SaveDraftCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderDto"
          }
        }
      },
      "SaveDraftRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32"
          },
          "supplierCompanyID": {
            "type": "integer",
            "format": "int32"
          },
          "clientID": {
            "type": "integer",
            "format": "int32"
          },
          "clientParty": {
            "$ref": "#/components/schemas/PartyCreateDto"
          },
          "periodicity": {
            "$ref": "#/components/schemas/OrderPeriodicity"
          },
          "frequency": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrderFrequency"
              }
            ]
          },
          "serviceRate": {
            "$ref": "#/components/schemas/OrderServiceRate"
          },
          "paymentFrequency": {
            "$ref": "#/components/schemas/OrderPaymentFrequency"
          },
          "paymentType": {
            "$ref": "#/components/schemas/OrderPaymentType"
          },
          "paymentFrequencyDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentFrequencyDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "hourRateServiceVariantID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientStatus": {
            "$ref": "#/components/schemas/OrderClientStatus"
          },
          "isClientPersonalDataProcessingConsent": {
            "type": "boolean",
            "nullable": true
          },
          "isClientElectronicCommunicationConsent": {
            "type": "boolean",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "orderServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaveDraftOrderService"
            }
          }
        }
      },
      "PartyCreateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PartyType"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true
          },
          "personalNumber": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isForeigner": {
            "type": "boolean"
          },
          "isVATPayer": {
            "type": "boolean",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "identification": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdentificationType"
              }
            ]
          },
          "identificationNumber": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeFirstName": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeLastName": {
            "type": "string",
            "nullable": true
          },
          "companyRepresentativeBirthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        }
      },
      "SaveDraftOrderService": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceVariantID": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string"
          },
          "serviceDescription": {
            "type": "string"
          },
          "serviceVariantName": {
            "type": "string"
          },
          "serviceVariantProduct": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          },
          "serviceVariantTaxRate": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          },
          "hoursSpent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currencyCode": {
            "type": "string"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceType"
          }
        }
      },
      "DraftStepCompleteCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "GetClientReviewSummaryQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderDto"
          },
          "clientParty": {
            "$ref": "#/components/schemas/PartyDto"
          },
          "supplierParty": {
            "$ref": "#/components/schemas/PartyDto"
          },
          "orderServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderServiceDto"
            }
          },
          "supplierCompanyPublicID": {
            "type": "string",
            "format": "guid"
          },
          "enterprisePublicID": {
            "type": "string",
            "format": "guid"
          },
          "enterpriseEmailCommunicationMode": {
            "$ref": "#/components/schemas/EnterpriseEmailCommunicationMode"
          },
          "userFormatName": {
            "type": "string"
          },
          "clientApprovalStep": {
            "$ref": "#/components/schemas/OrderWorkflowStepDto"
          },
          "clientPrepaidPaymentApprovalStep": {
            "$ref": "#/components/schemas/OrderWorkflowStepDto"
          },
          "prepaidPaymentInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PrepaidPaymentInformationDto"
              }
            ]
          }
        }
      },
      "EnterpriseEmailCommunicationMode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "OnlySupplierCompany",
          "SupplierCompanyAndUser"
        ],
        "enum": [
          "OnlySupplierCompany",
          "SupplierCompanyAndUser"
        ]
      },
      "PrepaidPaymentInformationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierIban": {
            "type": "string"
          },
          "variableSymbol": {
            "type": "string"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "currencyCode": {
            "type": "string"
          }
        }
      },
      "SendReminderCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientApprovalStepRejectCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientApprovalRejectRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userAgent": {
            "type": "string"
          }
        }
      },
      "ClientApprovalStepInitCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "CompleteClientApprovalStepCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfCompleteClientApprovalStepError": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/CompleteClientApprovalStepError"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompleteClientApprovalStepError": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvalidSignatureCode",
          "AlreadyCompleted",
          "AlreadyRejected"
        ],
        "enum": [
          "InvalidSignatureCode",
          "AlreadyCompleted",
          "AlreadyRejected"
        ]
      },
      "ClientApprovalCompleteRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userAgent": {
            "type": "string"
          },
          "signatureCode": {
            "type": "string"
          },
          "isRevocationDisabled": {
            "type": "boolean"
          }
        }
      },
      "OrderServiceCompleteCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderService": {
            "$ref": "#/components/schemas/OrderServiceDto"
          },
          "areAllServicesCompleted": {
            "type": "boolean"
          }
        }
      },
      "InvoiceIssuanceStepCompleteCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "InvoicePaymentStepCompleteCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "InvoicePaymentStepReminderCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "enterpriseID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EnterpriseInvoiceIssuanceAndPaymentStepQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ClientInvoiceRecurringPaymentCancelCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientInvoiceRecurringPaymentCancelErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentCancelErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientInvoiceRecurringPaymentCancelErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "CannotCancelPaymentCalendarInThisStatus"
        ],
        "enum": [
          "CannotCancelPaymentCalendarInThisStatus"
        ]
      },
      "ClientInvoiceRecurringPaymentReminderCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientInvoiceRecurringPaymentReminderErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentReminderErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientInvoiceRecurringPaymentReminderErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvoiceWasNoSentToClientInPast",
          "InvoiceWasCanceled"
        ],
        "enum": [
          "InvoiceWasNoSentToClientInPast",
          "InvoiceWasCanceled"
        ]
      },
      "ClientPrepaidInvoiceRecurringPaymentReminderCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientPrepaidInvoiceRecurringPaymentReminderErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientPrepaidInvoiceRecurringPaymentReminderErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientPrepaidInvoiceRecurringPaymentReminderErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvoiceWasCanceled"
        ],
        "enum": [
          "InvoiceWasCanceled"
        ]
      },
      "ClientInvoiceRecurringPaymentCreateInvoiceCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientInvoiceRecurringPaymentCreateAndSendInvoiceToClientErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentCreateAndSendInvoiceToClientErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientInvoiceRecurringPaymentCreateAndSendInvoiceToClientErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvoiceHasAlreadyBeenCreatedAndSentToClient",
          "InvoiceWasCanceled"
        ],
        "enum": [
          "InvoiceHasAlreadyBeenCreatedAndSentToClient",
          "InvoiceWasCanceled"
        ]
      },
      "ClientInvoiceRecurringPaymentClientPaidCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientInvoiceRecurringPaymentClientPaidErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientInvoiceRecurringPaymentClientPaidErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientInvoiceRecurringPaymentClientPaidErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "HasAlreadyBeenMarkedAsPaid",
          "MustBeCreateInvoiceForClientBeforeThisAction",
          "InvoiceWasCanceled"
        ],
        "enum": [
          "HasAlreadyBeenMarkedAsPaid",
          "MustBeCreateInvoiceForClientBeforeThisAction",
          "InvoiceWasCanceled"
        ]
      },
      "ClientInvoiceRecurringPaymentClientPaidRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          },
          "instructionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvoiceHasAlreadyBeenCreatedAndSentToClient"
        ],
        "enum": [
          "InvoiceHasAlreadyBeenCreatedAndSentToClient"
        ]
      },
      "ClientPrepaidInvoiceRecurringPaymentSendInvoiceAndSetPaidRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          },
          "instructionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendClientAssignmentEmailCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientPrepaidPaymentApprovalStepCompleteCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientPrepaidPaymentApprovalStepCompleteCommandRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          },
          "instructionIDFromBankPayment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApiProblemDetailsOfInProgressClientApprovalStepError": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/InProgressClientApprovalStepError"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InProgressClientApprovalStepError": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AlreadyInProgress",
          "AlreadyRejected"
        ],
        "enum": [
          "AlreadyInProgress",
          "AlreadyRejected"
        ]
      },
      "ClientPrepaidPaymentApprovalStepInProgressCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientPrepaidPaymentApprovalStepInProgressRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userAgent": {
            "type": "string"
          },
          "isRevocationDisabled": {
            "type": "boolean"
          }
        }
      },
      "ClientPrepaidPaymentApprovalStepRejectCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ClientPrepaidPaymentApprovalStepRejectRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userAgent": {
            "type": "string"
          }
        }
      },
      "SaveUserNotificationSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "UserNotificationUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isEmailNotificationActive": {
            "type": "boolean"
          }
        }
      },
      "EntityListOfInvoiceForSupplierCompanyByUserListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceForSupplierCompanyByUserListItemDto"
            }
          }
        }
      },
      "InvoiceForSupplierCompanyByUserListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceForSupplierCompanyByUserID": {
            "type": "integer",
            "format": "int32"
          },
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "tax": {
            "type": "number",
            "format": "decimal"
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "customerFormattedName": {
            "type": "string"
          },
          "customerCompanyNumber": {
            "type": "string",
            "nullable": true
          },
          "customerTaxNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceID": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "variableSymbol": {
            "type": "string",
            "nullable": true
          },
          "constantSymbol": {
            "type": "string",
            "nullable": true
          },
          "specificSymbol": {
            "type": "string",
            "nullable": true
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "supplier": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PartyDto"
              }
            ]
          },
          "customer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PartyDto"
              }
            ]
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "tax": {
            "type": "number",
            "format": "decimal"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemDto"
            }
          }
        }
      },
      "InvoiceItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceItemID": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "InvoiceISDOCDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isdocXmlBase64": {
            "type": "string"
          }
        }
      },
      "InvoiceISDOCPdfBase64Dto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isdocPdfBase64": {
            "type": "string"
          }
        }
      },
      "InvoiceForSupplierCompanyByUserISDOCPdfBase64ListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isdocPdfBase64List": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isdocPdfsZipBase64": {
            "type": "string"
          }
        }
      },
      "CancelInvoiceForClientByOrderCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateEnterpriseRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalID": {
            "type": "string",
            "description": "External identifier of the enterprise."
          },
          "name": {
            "type": "string",
            "description": "Name of the enterprise."
          },
          "mode": {
            "description": "Set Strict or Free mode.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterpriseMode"
              }
            ]
          },
          "designSetting": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterpriseDesignSettingDto"
              }
            ]
          },
          "companies": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterpriseCompaniesDto"
              }
            ]
          }
        }
      },
      "EnterpriseMode": {
        "type": "string",
        "description": "Strict - there is a predefined list of companies that can be used by advisors.\nFree - advisors are free to define custom companies under which they will provide services.",
        "x-enumNames": [
          "Strict",
          "Free"
        ],
        "enum": [
          "Strict",
          "Free"
        ]
      },
      "EnterpriseDesignSettingDto": {
        "type": "object",
        "description": "Enterprise design settings user for application design.",
        "additionalProperties": false,
        "properties": {
          "color": {
            "type": "string",
            "description": "Primary color of the enterprise."
          },
          "logoBase64": {
            "type": "string",
            "description": "Logo of the enterprise.",
            "nullable": true
          }
        }
      },
      "EnterpriseCompaniesDto": {
        "type": "object",
        "description": "Collection of companies.\n            \nInvoicing information used in invoices for clients in case the Enterprise is in Strict mode.\nAll these companies will be available for all Orders of all the Users of the Enterprise.\n            \nThis is not used for Enterprises in Free mode.",
        "additionalProperties": false,
        "properties": {
          "default": {
            "description": "Default company.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterpriseCompanyDto"
              }
            ]
          },
          "others": {
            "type": "array",
            "description": "Other optional companies.",
            "items": {
              "$ref": "#/components/schemas/EnterpriseCompanyDto"
            }
          }
        }
      },
      "EnterpriseCompanyDto": {
        "type": "object",
        "description": "Information about a company.\n            \nInvoicing information used in invoices for clients in case the Enterprise is in Strict mode.\nAll these companies will be available for all Orders of all the Users of the Enterprise.",
        "additionalProperties": false,
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External ID of the company."
          },
          "invoiceNumberSeries": {
            "type": "integer",
            "description": "Number used for the first invoice of the company.",
            "format": "int64",
            "nullable": true
          },
          "designSetting": {
            "description": "Design settings.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterpriseCompanyDesignSettingDto"
              }
            ]
          },
          "party": {
            "description": "Legal entity information.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnterprisePartyDto"
              }
            ]
          }
        }
      },
      "EnterpriseCompanyDesignSettingDto": {
        "type": "object",
        "description": "Design settings used for invoices.",
        "additionalProperties": false,
        "properties": {
          "logoBase64": {
            "type": "string",
            "description": "Logo of the company.",
            "nullable": true
          }
        }
      },
      "EnterprisePartyDto": {
        "type": "object",
        "description": "Legal entity information.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PartyType"
          },
          "firstName": {
            "type": "string",
            "description": "First name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name.",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company in case type is LegalEntity.",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "description": "Numeric or alphanumeric string that is used to identify a tax entity that is a taxpayer.",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "description": "Numeric or alphanumeric string that is used to identify a company/corporate/business entity.",
            "nullable": true
          },
          "personalNumber": {
            "type": "string",
            "description": "Numeric or alphanumeric string that is used to identify a person.",
            "nullable": true
          },
          "isVATPayer": {
            "type": "boolean",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "description": "Date of the birth.",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterprisePartyAddressDto"
            }
          }
        }
      },
      "EnterprisePartyAddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AddressType"
          },
          "municipality": {
            "type": "string",
            "description": "City/town/village."
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "orientationNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChangeEnterpriseModeCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterpriseModeChangeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/EnterpriseMode"
          }
        }
      },
      "SaveEnterpriseDesignSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterpriseDesignSettingsUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "color": {
            "type": "string"
          },
          "logoBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SaveEnterpriseCommunicationSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterpriseCommunicationSettingsUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "emailCommunicationMode": {
            "$ref": "#/components/schemas/EnterpriseEmailCommunicationMode"
          },
          "prepaidOrderReminderForPaymentCalendarItemsStatus": {
            "$ref": "#/components/schemas/EnterprisePrepaidOrderInvoiceToClientCommunicationMode"
          }
        }
      },
      "EnterprisePrepaidOrderInvoiceToClientCommunicationMode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Active",
          "Inactive"
        ],
        "enum": [
          "Active",
          "Inactive"
        ]
      },
      "EnterpriseBasicSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "color": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/EnterpriseMode"
          },
          "emailCommunicationMode": {
            "$ref": "#/components/schemas/EnterpriseEmailCommunicationMode"
          },
          "prepaidOrderReminderForPaymentCalendarItemsStatus": {
            "$ref": "#/components/schemas/EnterprisePrepaidOrderInvoiceToClientCommunicationMode"
          }
        }
      },
      "CreateEnterpriseCommissionSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfCreateEnterpriseCommissionSettingsErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/CreateEnterpriseCommissionSettingsErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateEnterpriseCommissionSettingsErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DateFromIsInConflictWithAnotherCommission",
          "DateFromCannotBeInPast"
        ],
        "enum": [
          "DateFromIsInConflictWithAnotherCommission",
          "DateFromCannotBeInPast"
        ]
      },
      "CreateEnterpriseCommissionSettingsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enterpriseCommissionRate": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionRate": {
            "type": "number",
            "format": "decimal"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntityListOfEnterpriseCommissionSettingsListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterpriseCommissionSettingsListItemDto"
            }
          }
        }
      },
      "EnterpriseCommissionSettingsListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enterpriseCommissionSettingID": {
            "type": "integer",
            "format": "int32"
          },
          "enterpriseCommissionRate": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionRate": {
            "type": "number",
            "format": "decimal"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "EnterpriseServiceSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maximalPriceRangeRate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "canUserSetPrice": {
            "type": "boolean"
          }
        }
      },
      "SaveEnterpriseServiceSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterpriseServiceSettingsUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "canUserSetPrice": {
            "type": "boolean"
          },
          "maximalPriceRangeRate": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "EnterpriseServiceListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceSettingID": {
            "type": "integer",
            "format": "int32"
          },
          "serviceID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterpriseServiceVariantListItemDto"
            }
          }
        }
      },
      "EnterpriseServiceVariantListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceSettingServiceVariantID": {
            "type": "integer",
            "format": "int32"
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "currencyCode": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "serviceVariantID": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ServiceVariantProduct"
          },
          "frequency": {
            "$ref": "#/components/schemas/ServiceVariantFrequency"
          }
        }
      },
      "SaveEnterpriseServicesCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterpriseServicesUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterpriseServiceUpdateListItemDto"
            }
          }
        }
      },
      "EnterpriseServiceUpdateListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceSettingID": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnterpriseServiceVariantUpdateListItemDto"
            }
          }
        }
      },
      "EnterpriseServiceVariantUpdateListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceSettingServiceVariantID": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "EnterpriseLogoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logoBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnterpriseDesignSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "color": {
            "type": "string"
          }
        }
      },
      "EnterprisePackageServiceSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "minimalPriceWithoutTaxSingle": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maximalPriceWithoutTaxSingle": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "minimalPriceWithoutTaxMonthly": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maximalPriceWithoutTaxMonthly": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isCreatePackageByAdvisorEnabled": {
            "type": "boolean"
          },
          "canUserCreatePackage": {
            "type": "boolean"
          }
        }
      },
      "SaveEnterprisePackageServiceSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "EnterprisePackageServiceSettingsUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "minimalPriceWithoutTaxSingle": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maximalPriceWithoutTaxSingle": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "minimalPriceWithoutTaxMonthly": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maximalPriceWithoutTaxMonthly": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isCreatePackageByAdvisorEnabled": {
            "type": "boolean"
          }
        }
      },
      "EntityListOfCutoffListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CutoffListItemDto"
            }
          }
        }
      },
      "CutoffListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "tax": {
            "type": "number",
            "format": "decimal"
          },
          "companyName": {
            "type": "string"
          },
          "companyNumber": {
            "type": "string"
          },
          "taxNumber": {
            "type": "string"
          },
          "isSendingPaymentsEnabled": {
            "type": "boolean"
          }
        }
      },
      "CutoffDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cutoffID": {
            "type": "integer",
            "format": "int32"
          },
          "enterpriseID": {
            "type": "integer",
            "format": "int32"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CutoffUserDto"
            }
          }
        }
      },
      "CutoffUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cutoffUserID": {
            "type": "integer",
            "format": "int32"
          },
          "userExternalID": {
            "type": "string"
          },
          "userCompanyParty": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PartyDto"
              }
            ]
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CutoffUserItemDto"
            }
          }
        }
      },
      "CutoffUserItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cutoffUserItemID": {
            "type": "integer",
            "format": "int32"
          },
          "priceWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "priceWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionRate": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionWithoutTax": {
            "type": "number",
            "format": "decimal"
          },
          "advisorCommissionWithTax": {
            "type": "number",
            "format": "decimal"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int64"
          },
          "currencyID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCutoffCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pdfBase64": {
            "type": "string"
          }
        }
      },
      "ApiProblemDetailsOfCreateCutoffErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/CreateCutoffErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateCutoffErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ForThisSupplierCutoffAlreadyRunning",
          "DateFromIsInConflictWithPreviousCutoffDateTo"
        ],
        "enum": [
          "ForThisSupplierCutoffAlreadyRunning",
          "DateFromIsInConflictWithPreviousCutoffDateTo"
        ]
      },
      "CutoffCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time"
          },
          "isDraft": {
            "type": "boolean"
          },
          "orderSupplierCompanyID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DateFromForNextCutoffDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nextCutoffDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GetExpectedUserCommissionQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expectedUserCommission": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "GetPaidUserCommissionQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paidUserCommission": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "CutoffISDOCPdfsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isdocPdfsZipBase64": {
            "type": "string"
          }
        }
      },
      "SendCutoffPaymentsCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isSuccess": {
            "type": "boolean"
          }
        }
      },
      "CutoffDetailPdfBase64Dto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cutoffDetailPdfBase64": {
            "type": "string"
          }
        }
      },
      "CutoffUserSupplierCompanyListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyID": {
            "type": "integer",
            "format": "int32"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompanyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyID": {
            "type": "integer",
            "format": "int32"
          },
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "partyID": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "canBeSelectedToOrderDisabled": {
            "type": "boolean"
          },
          "invoiceNumberSeries": {
            "type": "integer",
            "format": "int64"
          },
          "party": {
            "$ref": "#/components/schemas/PartyDto"
          }
        }
      },
      "UpdateCompanyCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "CompanyUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "companyNumber": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "isVATPayer": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "invoiceNumberSeries": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "canBeSelectedToOrderDisabled": {
            "type": "boolean"
          },
          "vatPayerOrderTaxChangeType": {
            "$ref": "#/components/schemas/VATPayerOrderTaxChangeType"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          }
        }
      },
      "VATPayerOrderTaxChangeType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "IncreaseTax",
          "DecreaseTax"
        ],
        "enum": [
          "None",
          "IncreaseTax",
          "DecreaseTax"
        ]
      },
      "CreateCompanyCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CompanyCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyNumber": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "isVATPayer": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "invoiceNumberSeries": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          }
        }
      },
      "UserSupplierCompanyListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyID": {
            "type": "integer",
            "format": "int32"
          },
          "publicID": {
            "type": "string",
            "format": "guid"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isVATPayer": {
            "type": "boolean",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true
          },
          "canBeSelectedToOrderDisabled": {
            "type": "boolean"
          },
          "permanentAddress": {
            "$ref": "#/components/schemas/AddressDto"
          }
        }
      },
      "SetUserSupplierCompanyCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "UserSupplierCompanySetRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "publicID": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CompanyDesignSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logoBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SaveCompanyDesignSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "SaveCompanyDesignSettingsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logoBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompanyFioSettingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "companyFioSettingID": {
            "type": "integer",
            "format": "int32"
          },
          "companyID": {
            "type": "integer",
            "format": "int32"
          },
          "isMatchingPaymentsEnabled": {
            "type": "boolean"
          },
          "isSendingPaymentsEnabled": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "fioApiKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SaveCompanyFioSettingsCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "SaveFioSettingsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "isMatchingPaymentsEnabled": {
            "type": "boolean"
          },
          "isSendingPaymentsEnabled": {
            "type": "boolean"
          },
          "fioApiKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetCodeListCollectionQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeListItemDto"
            }
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeListItemDto"
            }
          }
        }
      },
      "CodeListItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GetClientsCountQueryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientID": {
            "type": "integer",
            "format": "int32"
          },
          "externalClientID": {
            "type": "string",
            "nullable": true
          },
          "partyID": {
            "type": "integer",
            "format": "int32"
          },
          "party": {
            "$ref": "#/components/schemas/PartyDto"
          }
        }
      },
      "SignUpCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfSignUpErrorStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/SignUpErrorStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SignUpErrorStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "UserExists"
        ],
        "enum": [
          "UserExists"
        ]
      },
      "ApiProblemDetailsOfPasswordChangeResultStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/PasswordChangeResultStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PasswordChangeResultStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PasswordNotMatch",
          "NullOrEmpty",
          "TooShort",
          "Success"
        ],
        "enum": [
          "PasswordNotMatch",
          "NullOrEmpty",
          "TooShort",
          "Success"
        ]
      },
      "SignUpCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "SignInResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userIdentityProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProvider"
            }
          },
          "accessRightCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isFirstSignIn": {
            "type": "boolean"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IdentityProvider": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Application",
          "Google",
          "BankID",
          "Broker"
        ],
        "enum": [
          "Application",
          "Google",
          "BankID",
          "Broker"
        ]
      },
      "ApiProblemDetailsOfAuthError": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/AuthError"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuthError": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ApplicationVerification",
          "InvalidCredentials",
          "AccountIsDisabled",
          "AccountNotFound",
          "PhoneNumberNotFound",
          "SmsSendingFailed",
          "InvalidToken",
          "AccountWaitingForEmailConfirmation",
          "AccountNotActive"
        ],
        "enum": [
          "ApplicationVerification",
          "InvalidCredentials",
          "AccountIsDisabled",
          "AccountNotFound",
          "PhoneNumberNotFound",
          "SmsSendingFailed",
          "InvalidToken",
          "AccountWaitingForEmailConfirmation",
          "AccountNotActive"
        ]
      },
      "SignInCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token."
          },
          "token_type": {
            "type": "string",
            "description": "Token type."
          },
          "expires_in": {
            "type": "integer",
            "description": "Duration of time (in seconds) the access token is granted for.",
            "format": "int32"
          }
        }
      },
      "EmailVerificationCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "signInResult": {
            "$ref": "#/components/schemas/SignInResult"
          }
        }
      },
      "ApiProblemDetailsOfEmailVerificationCommandResultStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/EmailVerificationCommandResultStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailVerificationCommandResultStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "TokenNotFound",
          "UserNotFound"
        ],
        "enum": [
          "TokenNotFound",
          "UserNotFound"
        ]
      },
      "EmailVerificationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ResendVerificationEmailCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ResendVerificationEmailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "SsoSignInRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "description": "State identifier.",
            "nullable": true
          },
          "identityProvider": {
            "$ref": "#/components/schemas/IdentityProvider"
          },
          "mode": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthMode"
              }
            ]
          },
          "originUrl": {
            "type": "string",
            "description": "URL of the API that initiated the SSO flow.",
            "nullable": true
          }
        }
      },
      "AuthMode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "OAuth",
          "UserToken"
        ],
        "enum": [
          "OAuth",
          "UserToken"
        ]
      },
      "RedirectHttpResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "permanent": {
            "type": "boolean"
          },
          "preserveMethod": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "acceptLocalUrlOnly": {
            "type": "boolean"
          }
        }
      },
      "ResetPasswordCommandResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ApiProblemDetailsOfResetPasswordCommandResultStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/ResetPasswordCommandResultStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResetPasswordCommandResultStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Fail"
        ],
        "enum": [
          "Fail"
        ]
      },
      "ResetPasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "login": {
            "type": "string"
          }
        }
      },
      "SetPasswordCommandResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "signInResult": {
            "$ref": "#/components/schemas/SignInResult"
          }
        }
      },
      "ApiProblemDetailsOfSetPasswordCommandStatus": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "errors": {
            "type": "object",
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/SetPasswordCommandStatus"
            },
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SetPasswordCommandStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "TokenNotFound"
        ],
        "enum": [
          "TokenNotFound"
        ]
      },
      "SetPasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}